version: 2.1

executors:
  default:
    working_directory: ~/sharing
    docker:
      - image: circleci/ruby:2.7.1
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: root
          DB_PASSWORD: ''
      - image: circleci/mysql:8.0.18
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_ROOT_HOST: '%'

# commands:
#   configure_bundler:
#     description: Configure bundler
#     steps:
#       - run:
#           name: Configure bundler
#           command: |
#             echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
#             source $BASH_ENV
#             # bundle update --bundler
#             # gem install bundler

jobs:
  build:
    executor: default
    steps:
      - checkout
      - run:
          name: Verify Bundler version
          command: bundle --version
      # - restore_cache:
      #     keys: /home/nguyen.tan.thang/GameServer/CICD/CICD/Gemfile.lock
      # - configure_bundler
      # - run: gem install bundler
      - run:
          name: Install bundle
          command: bundle install
      # - run:
      #     name: Wait for DB
      #     command: dockerize -wait tcp://127.0.0.1:3307 -timeout 1m
      # - run:
      #     name: Setup DB
      #     command: bundle exec rails db:create db:schema:load --trace
      # - save_cache:
      #     key: /home/nguyen.tan.thang/GameServer/CICD/CICD/Gemfile.lock
      #     paths:
      #       - vendor/bundle
      # - persist_to_workspace:
      #     root: ~/
      #     paths:
      #       - ./sharing
  rubocop:
    executor: default
    steps:
      # - attach_workspace:
      #     at: ~/
      - checkout
      - run:
          name: Verify Bundler version
          command: bundle --version
      # - configure_bundler
      # - run: gem install bundler
      # - run: bundle config set --local path 'vendor/bundle'
      - run:
          name: Install bundle
          command: bundle install
          # name: Install bundle path vendor/bundle
          # command: bundle install --path vendor/bundle
      # - run: bundle exec rails db:drop db:create db:migrate
      - run:
          name: Rubocop
          command: bundle exec rubocop

workflows:
  version: 2
  integration:
    jobs:
      - build
      - rubocop:
          requires:
            - build
